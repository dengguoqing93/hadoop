package step1;

import edu.umd.cloud9.io.pair.PairOfStrings;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.MultipleInputs;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat;

import java.io.IOException;

/**
 * 提交阶段1作业的驱动器
 *
 * @author dengguoqing
 * @date 2019/2/26
 */
public class LeftJoinDriver {
    public static void main(
            String[] args) throws IOException, ClassNotFoundException, InterruptedException {
        Path transactions = new Path(
                "file:///Users/dengguoqing/IdeaProjects/hadoop/algorithms/left-join/src/main/resources/transactions.txt");
        Path users = new Path(
                "file:///Users/dengguoqing/IdeaProjects/hadoop/algorithms/left-join/src/main/resources/user.txt");
        Path output = new Path(
                "file:///Users/dengguoqing/IdeaProjects/hadoop/algorithms/left-join/src/main/resources/output");

        Job job = Job.getInstance();
        job.setJarByClass(LeftJoinDriver.class);
        job.setJobName("Phase-1: Left Outer Join");

        // "secondary sort" is handled by setting the following 3 plug-ins:
        // 1. how the mapper generated keys will be partitioned
        job.setPartitionerClass(SecondarySortPartitioner.class);

        // 2. how the natural keys (generated by mappers) will be grouped
        job.setGroupingComparatorClass(SecondarySortGroupComparator.class);

        // 3. how PairOfStrings will be sorted
        job.setSortComparatorClass(PairOfStrings.Comparator.class);

        job.setReducerClass(LeftJoinReducer.class);

        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(Text.class);
        job.setOutputFormatClass(SequenceFileOutputFormat.class);

        // define multiple mappers: one for users and one for transactions
        MultipleInputs.addInputPath(job, transactions, TextInputFormat.class, LeftJoinTransactionMapper.class);
        MultipleInputs.addInputPath(job, users, TextInputFormat.class, LeftJoinUserMapper.class);

        job.setMapOutputKeyClass(PairOfStrings.class);
        job.setMapOutputValueClass(PairOfStrings.class);
        FileOutputFormat.setOutputPath(job, output);


        System.exit(job.waitForCompletion(true) ? 0 : 1);

    }
}
